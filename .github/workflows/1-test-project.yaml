name: Java CI with Docker Compose Postgres

on: push

jobs:
  build-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy .env-test to .env
        run: cp .env-test .env

      - name: Stop and remove all containers and volumes
        run: |
          docker compose down -v --remove-orphans
          docker system prune -f --volumes
      

      - name: Start services via Docker Compose
        run: docker compose --env-file .env-test up -d --build

      - name: Wait for Postgres to be ready
        env:
          POSTGRES_USER: test
          POSTGRES_DB: test
        run: |
          echo "Waiting for database..."
          # obtém o container do postgres (ajuste "postgres" se seu serviço tiver outro nome)
          POSTGRES_CONTAINER=$(docker ps -qf "name=postgres")
          until docker exec db pg_isready -U $POSTGRES_USER -d $POSTGRES_DB; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Run tests
        env:
          SECRET_KEY: testing
          DATABASE_NAME: test
          DATABASE_PASSWORD: test123
          DATABASE_DB: test
          JWT_ISSUER: test
        run: ./gradlew test
